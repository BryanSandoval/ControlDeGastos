{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","localData","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addTransaction","Balance","num","total","useContext","map","amount","reduce","acc","item","Intl","NumberFormat","style","currency","minimumFractionDigits","format","moneyFormatter","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","onClick","TransactionList","length","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAS,WACpB,OACE,kD,qBCJW,WAACC,EAAOC,GACrB,OAAOA,EAAOC,MACZ,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAErF,IAAK,kBAEH,OAAO,2BACFP,GADL,IAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAI5C,QACE,OAAOH,ICZPQ,EAAe,CACnBL,aAAc,IAIHM,EAAgBC,0BAGhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYN,GAAc,WAC7D,IAAMO,EAAYC,aAAaC,QAAQ,gBACvC,OAAOF,EAAY,CACjBZ,aAAce,KAAKC,MAAMJ,IACvBP,KALwC,mBACvCR,EADuC,KAChCoB,EADgC,KAsC9C,OApBAC,qBAAU,WACRL,aAAaM,QAAQ,eAAgBJ,KAAKK,UAAUvB,EAAMG,iBACzD,CAACH,IAkBI,kBAACS,EAAce,SAAf,CAAwBC,MAAO,CACrCtB,aAAcH,EAAMG,aACpBuB,kBAhBF,SAA2BpB,GACzBc,EAAS,CACPlB,KAAM,qBACNK,QAASD,KAcXqB,eAVF,SAAwBtB,GACtBe,EAAS,CACPlB,KAAM,kBACNK,QAASF,OASVO,IClCE,IAAMgB,EAAU,WAAO,IAjBNC,EAsBhBC,EAJmBC,qBAAWtB,GAA5BN,aAEqB6B,KAAI,SAAA3B,GAAW,OAAIA,EAAY4B,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAE3D,OACE,oCACE,qCACF,6BA3BoBP,EA2BAC,EAvBpB,GAFQ,IAAIO,KAAKC,aAAa,QAAS,CAACC,MAAM,WAAYC,SAAS,MAAOC,sBAAsB,IAEzFC,OAAOb,OCJlB,SAASc,EAAed,GActB,MACE,GAFQ,IAAIQ,KAAKC,aAAa,QAAS,CAACC,MAAM,WAAYC,SAAS,MAAOC,sBAAsB,IAEzFC,OAAOb,GAaX,IAAMe,EAAiB,WAAO,IAG7BC,EAFmBd,qBAAWtB,GAA5BN,aAEqB6B,KAAI,SAAA3B,GAAW,OAAIA,EAAY4B,UAEtDa,EAASD,EACZzC,QAAO,SAAAgC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAElCW,GAEH,EADDF,EAAQzC,QAAO,SAAAgC,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAIxE,OACE,yBAAKY,UAAU,qBACX,6BACE,wCACR,uBAAGA,UAAU,cAAcL,EAAeG,KAEpC,6BACE,sCACR,uBAAGE,UAAU,eAAeL,EAAeI,OCjCtC,IAAME,EAAc,SAAC,GAAqB,IAjBzBpB,EAiBMxB,EAAkB,EAAlBA,YACpBqB,EAAsBK,qBAAWtB,GAAjCiB,kBAEFwB,EAAO7C,EAAY4B,OAAS,EAAI,IAAM,IAE5C,OACE,wBAAIe,UAAW3C,EAAY4B,OAAS,EAAI,QAAU,QAC/C5B,EAAY8C,KADf,IACqB,8BAAOD,GAxBRrB,EAwB6BxB,EAAY4B,OApB7D,GAFQ,IAAII,KAAKC,aAAa,QAAS,CAACC,MAAM,WAAYC,SAAS,MAAOC,sBAAsB,IAEzFC,OAAOb,KAoB8D,4BAAQuB,QAAS,kBAAM1B,EAAkBrB,EAAYC,KAAK0C,UAAU,cAApE,OCvBnEK,EAAkB,WAAO,IAC5BlD,EAAiB4B,qBAAWtB,GAA5BN,aAER,OAAOA,EAAamD,OAClB,oCACE,yCACA,wBAAIN,UAAU,QACX7C,EAAa6B,KAAI,SAAA3B,GAAW,OAAK,kBAAC,EAAD,CAAakD,IAAKlD,EAAYC,GAAID,YAAaA,SAGlF,qDCZMmD,EAAiB,WAAO,IAAD,EACVC,mBAAS,IADC,mBAC3BN,EAD2B,KACrBO,EADqB,OAEND,mBAAS,GAFH,mBAE3BxB,EAF2B,KAEnB0B,EAFmB,KAI1BhC,EAAmBI,qBAAWtB,GAA9BkB,eAiBR,OACE,oCACE,4DACA,0BAAMiC,SAlBO,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAiB,CACrBzD,GAAI0D,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBf,OACAlB,QAASA,GAGXN,EAAeoC,GAEfL,EAAQ,IACRC,EAAU,KAON,yBAAKX,UAAU,gBACb,2BAAOmB,QAAQ,QAAf,WACA,2BAAOjE,KAAK,OAAOuB,MAAO0B,EAAMiB,SAAU,SAACP,GAAD,OAAOH,EAAQG,EAAEQ,OAAO5C,QAAQ6C,YAAY,2BAExF,yBAAKtB,UAAU,gBACb,2BAAOmB,QAAQ,UAAf,SACS,6BADT,yCAIA,2BAAOjE,KAAK,SAASuB,MAAOQ,EAAQmC,SAAU,SAACP,GAAD,OAAOF,EAAUE,EAAEQ,OAAO5C,QAAQ6C,YAAY,yBAE9F,4BAAQtB,UAAU,OAAlB,6B,MCdOuB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCfRwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.899c70fe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Control de gastos\r\n    </h2>\r\n  )\r\n}\r\n","export default (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      \r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext();\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState, () => {\r\n    const localData = localStorage.getItem('transactions');\r\n    return localData ? {\r\n      transactions: JSON.parse(localData)\r\n    } : initialState;\r\n  });\r\n\r\n\r\n  /*useEffect(() => {\r\n    const transacciones = JSON.parse(localStorage.getItem('transactions'))\r\n    \r\n    if (transacciones) {\r\n      setTransacciones(transacciones);\r\n      console.log(transacciones);\r\n    }\r\n}, [])*/\r\n\r\n  useEffect(() => { \r\n    localStorage.setItem('transactions', JSON.stringify(state.transactions));\r\n  }, [state]);\r\n\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  //let p = num.toFixed(2).split('.');\r\n  const f = new Intl.NumberFormat('es-CR', {style:'currency', currency:'CRC', minimumFractionDigits:2}); // Formatea montos\r\n  return (\r\n    '' + f.format(num)\r\n    /*'$ ' + (p[0].split('')[0]=== '-' ? '-' : '') +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]*/\r\n  );\r\n}\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n  return (\r\n    <>\r\n      <h4>Saldo</h4>\r\n    <h1>{moneyFormatter(total)}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  /*let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );*/\r\n  const f = new Intl.NumberFormat('es-CR', {style:'currency', currency:'CRC', minimumFractionDigits:2}); // Formatea montos\r\n  return (\r\n    '' + f.format(num)\r\n    /*'$ ' + (p[0].split('')[0]=== '-' ? '-' : '') +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]*/\r\n  );\r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  );\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Ingresos</h4>\r\n  <p className=\"money plus\">{moneyFormatter(income)}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Gastos</h4>\r\n  <p className=\"money minus\">{moneyFormatter(expense)}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  //let p = num.toFixed(2).split('.');\r\n  const f = new Intl.NumberFormat('es-CR', {style:'currency', currency:'CRC', minimumFractionDigits:2}); // Formatea montos\r\n  return (\r\n    '' + f.format(num)\r\n    /*'$ ' + (p[0].split('')[0]=== '-' ? '-' : '') +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]*/\r\n  );\r\n}\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text} <span>{sign}{moneyFormatter(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return transactions.length ? (\r\n    <>\r\n      <h3>Historial</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n      </ul>\r\n    </>\r\n  ) : (<h3>No hay transacciones</h3>);\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n\r\n    setText('');\r\n    setAmount(0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Agregar nueva transacción</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Detalle</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Ingrese el detalle...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Monto <br />\r\n            (negativ - gasto, positivo - ingreso)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Ingrese el monto...\" />\r\n        </div>\r\n        <button className=\"btn\">Agregar Transacción</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Header } from './components/Header';\r\nimport { Balance } from './components/Balance';\r\nimport { IncomeExpenses } from './components/IncomeExpenses';\r\nimport { TransactionList } from './components/TransactionList';\r\nimport { AddTransaction } from './components/AddTransaction';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}